//------------------------------------------------------------------------------
// <auto-generated>
//     這段程式碼是由工具產生的。
//
//     變更此檔案可能會導致不正確的行為，而且若已重新產生
//     程式碼，則會遺失變更。
// </auto-generated>
//------------------------------------------------------------------------------

namespace OldUserService
{
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="OldUserService.UserServiceSoap")]
    internal interface UserServiceSoap
    {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/BindUserWechat", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> BindUserWechatAsync(string strUserID, string strJSON);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/BindUserWechatOption", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> BindUserWechatOptionAsync(string strUserID, string PlatForm, string strJSON);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetOrgList", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> GetOrgListAsync(string strUserID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetSyntecUserInfo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> GetSyntecUserInfoAsync(string strUserID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetSyntecUserInfoOption", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> GetSyntecUserInfoOptionAsync(string strUserID, string strPlatForm);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetUserRole", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> GetUserRoleAsync(string strUserID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetUserRoleList", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> GetUserRoleListAsync(string strUserID, string strOrgID, string strRoleID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/LoginProcess", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> LoginProcessAsync(string strUserID, string strPassword, int intLoginType);
        
        // CODEGEN: 因為此作業具有多個傳回值，所以正在產生訊息合約。
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/LoginProcessPlatformOPTION", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<OldUserService.LoginProcessPlatformOPTIONResponse> LoginProcessPlatformOPTIONAsync(OldUserService.LoginProcessPlatformOPTIONRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdateUserData", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> UpdateUserDataAsync(string strUserID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdateUserEHRData", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> UpdateUserEHRDataAsync(string strUserID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdateUserTQMData", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> UpdateUserTQMDataAsync(string strUserID);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="LoginProcessPlatformOPTION", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    internal partial class LoginProcessPlatformOPTIONRequest
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string strUserID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string strPassword;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public int intPlatform;
        
        public LoginProcessPlatformOPTIONRequest()
        {
        }
        
        public LoginProcessPlatformOPTIONRequest(string strUserID, string strPassword, int intPlatform)
        {
            this.strUserID = strUserID;
            this.strPassword = strPassword;
            this.intPlatform = intPlatform;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="LoginProcessPlatformOPTIONResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    internal partial class LoginProcessPlatformOPTIONResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string LoginProcessPlatformOPTIONResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string ostrUserName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public string ostrMachineCode;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=3)]
        public string ostrOrgType;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=4)]
        public string ostrDecrypKey;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=5)]
        public string ostrOrgSubID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=6)]
        public string ostrCustomerID;
        
        public LoginProcessPlatformOPTIONResponse()
        {
        }
        
        public LoginProcessPlatformOPTIONResponse(string LoginProcessPlatformOPTIONResult, string ostrUserName, string ostrMachineCode, string ostrOrgType, string ostrDecrypKey, string ostrOrgSubID, string ostrCustomerID)
        {
            this.LoginProcessPlatformOPTIONResult = LoginProcessPlatformOPTIONResult;
            this.ostrUserName = ostrUserName;
            this.ostrMachineCode = ostrMachineCode;
            this.ostrOrgType = ostrOrgType;
            this.ostrDecrypKey = ostrDecrypKey;
            this.ostrOrgSubID = ostrOrgSubID;
            this.ostrCustomerID = ostrCustomerID;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    internal interface UserServiceSoapChannel : OldUserService.UserServiceSoap, System.ServiceModel.IClientChannel
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    internal partial class UserServiceSoapClient : System.ServiceModel.ClientBase<OldUserService.UserServiceSoap>, OldUserService.UserServiceSoap
    {
        
        /// <summary>
        /// 實作此部分方法來設定服務端點。
        /// </summary>
        /// <param name="serviceEndpoint">要設定的端點</param>
        /// <param name="clientCredentials">用戶端認證</param>
        static partial void ConfigureEndpoint(System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, System.ServiceModel.Description.ClientCredentials clientCredentials);
        
        public UserServiceSoapClient(EndpointConfiguration endpointConfiguration) : 
                base(UserServiceSoapClient.GetBindingForEndpoint(endpointConfiguration), UserServiceSoapClient.GetEndpointAddress(endpointConfiguration))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public UserServiceSoapClient(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(UserServiceSoapClient.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public UserServiceSoapClient(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(UserServiceSoapClient.GetBindingForEndpoint(endpointConfiguration), remoteAddress)
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public UserServiceSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress)
        {
        }
        
        public System.Threading.Tasks.Task<string> BindUserWechatAsync(string strUserID, string strJSON)
        {
            return base.Channel.BindUserWechatAsync(strUserID, strJSON);
        }
        
        public System.Threading.Tasks.Task<string> BindUserWechatOptionAsync(string strUserID, string PlatForm, string strJSON)
        {
            return base.Channel.BindUserWechatOptionAsync(strUserID, PlatForm, strJSON);
        }
        
        public System.Threading.Tasks.Task<string> GetOrgListAsync(string strUserID)
        {
            return base.Channel.GetOrgListAsync(strUserID);
        }
        
        public System.Threading.Tasks.Task<string> GetSyntecUserInfoAsync(string strUserID)
        {
            return base.Channel.GetSyntecUserInfoAsync(strUserID);
        }
        
        public System.Threading.Tasks.Task<string> GetSyntecUserInfoOptionAsync(string strUserID, string strPlatForm)
        {
            return base.Channel.GetSyntecUserInfoOptionAsync(strUserID, strPlatForm);
        }
        
        public System.Threading.Tasks.Task<string> GetUserRoleAsync(string strUserID)
        {
            return base.Channel.GetUserRoleAsync(strUserID);
        }
        
        public System.Threading.Tasks.Task<string> GetUserRoleListAsync(string strUserID, string strOrgID, string strRoleID)
        {
            return base.Channel.GetUserRoleListAsync(strUserID, strOrgID, strRoleID);
        }
        
        public System.Threading.Tasks.Task<string> LoginProcessAsync(string strUserID, string strPassword, int intLoginType)
        {
            return base.Channel.LoginProcessAsync(strUserID, strPassword, intLoginType);
        }
        
        public System.Threading.Tasks.Task<OldUserService.LoginProcessPlatformOPTIONResponse> LoginProcessPlatformOPTIONAsync(OldUserService.LoginProcessPlatformOPTIONRequest request)
        {
            return base.Channel.LoginProcessPlatformOPTIONAsync(request);
        }
        
        public System.Threading.Tasks.Task<string> UpdateUserDataAsync(string strUserID)
        {
            return base.Channel.UpdateUserDataAsync(strUserID);
        }
        
        public System.Threading.Tasks.Task<string> UpdateUserEHRDataAsync(string strUserID)
        {
            return base.Channel.UpdateUserEHRDataAsync(strUserID);
        }
        
        public System.Threading.Tasks.Task<string> UpdateUserTQMDataAsync(string strUserID)
        {
            return base.Channel.UpdateUserTQMDataAsync(strUserID);
        }
        
        public virtual System.Threading.Tasks.Task OpenAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndOpen));
        }
        
        public virtual System.Threading.Tasks.Task CloseAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginClose(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndClose));
        }
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.UserServiceSoap))
            {
                System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.ReaderQuotas = System.Xml.XmlDictionaryReaderQuotas.Max;
                result.MaxReceivedMessageSize = int.MaxValue;
                result.AllowCookies = true;
                return result;
            }
            if ((endpointConfiguration == EndpointConfiguration.UserServiceSoap12))
            {
                System.ServiceModel.Channels.CustomBinding result = new System.ServiceModel.Channels.CustomBinding();
                System.ServiceModel.Channels.TextMessageEncodingBindingElement textBindingElement = new System.ServiceModel.Channels.TextMessageEncodingBindingElement();
                textBindingElement.MessageVersion = System.ServiceModel.Channels.MessageVersion.CreateVersion(System.ServiceModel.EnvelopeVersion.Soap12, System.ServiceModel.Channels.AddressingVersion.None);
                result.Elements.Add(textBindingElement);
                System.ServiceModel.Channels.HttpTransportBindingElement httpBindingElement = new System.ServiceModel.Channels.HttpTransportBindingElement();
                httpBindingElement.AllowCookies = true;
                httpBindingElement.MaxBufferSize = int.MaxValue;
                httpBindingElement.MaxReceivedMessageSize = int.MaxValue;
                result.Elements.Add(httpBindingElement);
                return result;
            }
            throw new System.InvalidOperationException(string.Format("找不到名為 \'{0}\' 的端點。", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.UserServiceSoap))
            {
                return new System.ServiceModel.EndpointAddress("http://ws.syntecclub.com.tw:3789/UserService.asmx");
            }
            if ((endpointConfiguration == EndpointConfiguration.UserServiceSoap12))
            {
                return new System.ServiceModel.EndpointAddress("http://ws.syntecclub.com.tw:3789/UserService.asmx");
            }
            throw new System.InvalidOperationException(string.Format("找不到名為 \'{0}\' 的端點。", endpointConfiguration));
        }
        
        public enum EndpointConfiguration
        {
            
            UserServiceSoap,
            
            UserServiceSoap12,
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     這段程式碼是由工具產生的。
//
//     變更此檔案可能會導致不正確的行為，而且若已重新產生
//     程式碼，則會遺失變更。
// </auto-generated>
//------------------------------------------------------------------------------

namespace CRMService
{
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="CRMService.CRMServiceSoap")]
    public interface CRMServiceSoap
    {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetCRMInfoFromFlowDB", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> GetCRMInfoFromFlowDBAsync(string strUserID, string strCRMNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetCRMALARMInfoFromJira", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> GetCRMALARMInfoFromJiraAsync(string strUserID, string strCRMNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetProcessUnit", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> GetProcessUnitAsync(string strEncryptedUserID, string strJSON);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetCRMInfo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> GetCRMInfoAsync(string strEncryptedUserID, string strJSON);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CreateCRMID", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> CreateCRMIDAsync(string strEncryptedUserID, string strJSON);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetCRMListBySN", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> GetCRMListBySNAsync(string strEncryptedUserID, string strSN);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CreateCRMIDForServiceCloud", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> CreateCRMIDForServiceCloudAsync(string code, string Type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetOSSURLForServiceCloud", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> GetOSSURLForServiceCloudAsync(string code, string crmno);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdateCRMInfo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> UpdateCRMInfoAsync(string strEncryptedUserID, string strJSON);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdateCRMInfoForServiceCloud", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> UpdateCRMInfoForServiceCloudAsync(string code, string strJSON);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetCRMHistory", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> GetCRMHistoryAsync(string strEncryptedUserID, string strJSON);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetCustomerInfo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> GetCustomerInfoAsync(string strEncryptedUserID, string strJSON);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdateCustomerInfo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> UpdateCustomerInfoAsync(string strEncryptedUserID, string strJSON);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetUserInfo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> GetUserInfoAsync(string strEncryptedUserID, string strJSON);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdateUserInfo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> UpdateUserInfoAsync(string strEncryptedUserID, string strJSON);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetCouponInfo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> GetCouponInfoAsync(string strEncryptedUserID, string strJSON);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdateCouponInfo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> UpdateCouponInfoAsync(string strEncryptedUserID, string strJSON);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AddComment", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> AddCommentAsync(string strEncryptedUserID, string strJSON);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CheckQRCODE", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> CheckQRCODEAsync(string strEncryptedUserID, string QRCodeURL);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetContactInfo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> GetContactInfoAsync(string strEncryptedUserID, string strJSON);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CreateSoftwareBugIssue", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> CreateSoftwareBugIssueAsync(string strEncryptedUserID, string strJSON);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdateCNCQRCodeForCloud", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> UpdateCNCQRCodeForCloudAsync(string code, string strJSON);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdateControllerInformation", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> UpdateControllerInformationAsync(string strEncryptedUserID, string strJSON);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetControllerInformation", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> GetControllerInformationAsync(string strEncryptedUserID, string strJSON);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetCRMWaitList", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> GetCRMWaitListAsync(string strEncryptedUserID, string strUserID, string strUserName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetERPInfo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> GetERPInfoAsync(string snRefNo);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    public interface CRMServiceSoapChannel : CRMService.CRMServiceSoap, System.ServiceModel.IClientChannel
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    public partial class CRMServiceSoapClient : System.ServiceModel.ClientBase<CRMService.CRMServiceSoap>, CRMService.CRMServiceSoap
    {
        
        /// <summary>
        /// 實作此部分方法來設定服務端點。
        /// </summary>
        /// <param name="serviceEndpoint">要設定的端點</param>
        /// <param name="clientCredentials">用戶端認證</param>
        static partial void ConfigureEndpoint(System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, System.ServiceModel.Description.ClientCredentials clientCredentials);
        
        public CRMServiceSoapClient(EndpointConfiguration endpointConfiguration) : 
                base(CRMServiceSoapClient.GetBindingForEndpoint(endpointConfiguration), CRMServiceSoapClient.GetEndpointAddress(endpointConfiguration))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public CRMServiceSoapClient(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(CRMServiceSoapClient.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public CRMServiceSoapClient(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(CRMServiceSoapClient.GetBindingForEndpoint(endpointConfiguration), remoteAddress)
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public CRMServiceSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress)
        {
        }
        
        public System.Threading.Tasks.Task<string> GetCRMInfoFromFlowDBAsync(string strUserID, string strCRMNo)
        {
            return base.Channel.GetCRMInfoFromFlowDBAsync(strUserID, strCRMNo);
        }
        
        public System.Threading.Tasks.Task<string> GetCRMALARMInfoFromJiraAsync(string strUserID, string strCRMNo)
        {
            return base.Channel.GetCRMALARMInfoFromJiraAsync(strUserID, strCRMNo);
        }
        
        public System.Threading.Tasks.Task<string> GetProcessUnitAsync(string strEncryptedUserID, string strJSON)
        {
            return base.Channel.GetProcessUnitAsync(strEncryptedUserID, strJSON);
        }
        
        public System.Threading.Tasks.Task<string> GetCRMInfoAsync(string strEncryptedUserID, string strJSON)
        {
            return base.Channel.GetCRMInfoAsync(strEncryptedUserID, strJSON);
        }
        
        public System.Threading.Tasks.Task<string> CreateCRMIDAsync(string strEncryptedUserID, string strJSON)
        {
            return base.Channel.CreateCRMIDAsync(strEncryptedUserID, strJSON);
        }
        
        public System.Threading.Tasks.Task<string> GetCRMListBySNAsync(string strEncryptedUserID, string strSN)
        {
            return base.Channel.GetCRMListBySNAsync(strEncryptedUserID, strSN);
        }
        
        public System.Threading.Tasks.Task<string> CreateCRMIDForServiceCloudAsync(string code, string Type)
        {
            return base.Channel.CreateCRMIDForServiceCloudAsync(code, Type);
        }
        
        public System.Threading.Tasks.Task<string> GetOSSURLForServiceCloudAsync(string code, string crmno)
        {
            return base.Channel.GetOSSURLForServiceCloudAsync(code, crmno);
        }
        
        public System.Threading.Tasks.Task<string> UpdateCRMInfoAsync(string strEncryptedUserID, string strJSON)
        {
            return base.Channel.UpdateCRMInfoAsync(strEncryptedUserID, strJSON);
        }
        
        public System.Threading.Tasks.Task<string> UpdateCRMInfoForServiceCloudAsync(string code, string strJSON)
        {
            return base.Channel.UpdateCRMInfoForServiceCloudAsync(code, strJSON);
        }
        
        public System.Threading.Tasks.Task<string> GetCRMHistoryAsync(string strEncryptedUserID, string strJSON)
        {
            return base.Channel.GetCRMHistoryAsync(strEncryptedUserID, strJSON);
        }
        
        public System.Threading.Tasks.Task<string> GetCustomerInfoAsync(string strEncryptedUserID, string strJSON)
        {
            return base.Channel.GetCustomerInfoAsync(strEncryptedUserID, strJSON);
        }
        
        public System.Threading.Tasks.Task<string> UpdateCustomerInfoAsync(string strEncryptedUserID, string strJSON)
        {
            return base.Channel.UpdateCustomerInfoAsync(strEncryptedUserID, strJSON);
        }
        
        public System.Threading.Tasks.Task<string> GetUserInfoAsync(string strEncryptedUserID, string strJSON)
        {
            return base.Channel.GetUserInfoAsync(strEncryptedUserID, strJSON);
        }
        
        public System.Threading.Tasks.Task<string> UpdateUserInfoAsync(string strEncryptedUserID, string strJSON)
        {
            return base.Channel.UpdateUserInfoAsync(strEncryptedUserID, strJSON);
        }
        
        public System.Threading.Tasks.Task<string> GetCouponInfoAsync(string strEncryptedUserID, string strJSON)
        {
            return base.Channel.GetCouponInfoAsync(strEncryptedUserID, strJSON);
        }
        
        public System.Threading.Tasks.Task<string> UpdateCouponInfoAsync(string strEncryptedUserID, string strJSON)
        {
            return base.Channel.UpdateCouponInfoAsync(strEncryptedUserID, strJSON);
        }
        
        public System.Threading.Tasks.Task<string> AddCommentAsync(string strEncryptedUserID, string strJSON)
        {
            return base.Channel.AddCommentAsync(strEncryptedUserID, strJSON);
        }
        
        public System.Threading.Tasks.Task<string> CheckQRCODEAsync(string strEncryptedUserID, string QRCodeURL)
        {
            return base.Channel.CheckQRCODEAsync(strEncryptedUserID, QRCodeURL);
        }
        
        public System.Threading.Tasks.Task<string> GetContactInfoAsync(string strEncryptedUserID, string strJSON)
        {
            return base.Channel.GetContactInfoAsync(strEncryptedUserID, strJSON);
        }
        
        public System.Threading.Tasks.Task<string> CreateSoftwareBugIssueAsync(string strEncryptedUserID, string strJSON)
        {
            return base.Channel.CreateSoftwareBugIssueAsync(strEncryptedUserID, strJSON);
        }
        
        public System.Threading.Tasks.Task<string> UpdateCNCQRCodeForCloudAsync(string code, string strJSON)
        {
            return base.Channel.UpdateCNCQRCodeForCloudAsync(code, strJSON);
        }
        
        public System.Threading.Tasks.Task<string> UpdateControllerInformationAsync(string strEncryptedUserID, string strJSON)
        {
            return base.Channel.UpdateControllerInformationAsync(strEncryptedUserID, strJSON);
        }
        
        public System.Threading.Tasks.Task<string> GetControllerInformationAsync(string strEncryptedUserID, string strJSON)
        {
            return base.Channel.GetControllerInformationAsync(strEncryptedUserID, strJSON);
        }
        
        public System.Threading.Tasks.Task<string> GetCRMWaitListAsync(string strEncryptedUserID, string strUserID, string strUserName)
        {
            return base.Channel.GetCRMWaitListAsync(strEncryptedUserID, strUserID, strUserName);
        }
        
        public System.Threading.Tasks.Task<string> GetERPInfoAsync(string snRefNo)
        {
            return base.Channel.GetERPInfoAsync(snRefNo);
        }
        
        public virtual System.Threading.Tasks.Task OpenAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndOpen));
        }
        
        public virtual System.Threading.Tasks.Task CloseAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginClose(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndClose));
        }
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.CRMServiceSoap))
            {
                System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.ReaderQuotas = System.Xml.XmlDictionaryReaderQuotas.Max;
                result.MaxReceivedMessageSize = int.MaxValue;
                result.AllowCookies = true;
                return result;
            }
            if ((endpointConfiguration == EndpointConfiguration.CRMServiceSoap12))
            {
                System.ServiceModel.Channels.CustomBinding result = new System.ServiceModel.Channels.CustomBinding();
                System.ServiceModel.Channels.TextMessageEncodingBindingElement textBindingElement = new System.ServiceModel.Channels.TextMessageEncodingBindingElement();
                textBindingElement.MessageVersion = System.ServiceModel.Channels.MessageVersion.CreateVersion(System.ServiceModel.EnvelopeVersion.Soap12, System.ServiceModel.Channels.AddressingVersion.None);
                result.Elements.Add(textBindingElement);
                System.ServiceModel.Channels.HttpTransportBindingElement httpBindingElement = new System.ServiceModel.Channels.HttpTransportBindingElement();
                httpBindingElement.AllowCookies = true;
                httpBindingElement.MaxBufferSize = int.MaxValue;
                httpBindingElement.MaxReceivedMessageSize = int.MaxValue;
                result.Elements.Add(httpBindingElement);
                return result;
            }
            throw new System.InvalidOperationException(string.Format("找不到名為 \'{0}\' 的端點。", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.CRMServiceSoap))
            {
                return new System.ServiceModel.EndpointAddress("http://ws.syntecclub.com.tw:3789/CRMService.asmx");
            }
            if ((endpointConfiguration == EndpointConfiguration.CRMServiceSoap12))
            {
                return new System.ServiceModel.EndpointAddress("http://ws.syntecclub.com.tw:3789/CRMService.asmx");
            }
            throw new System.InvalidOperationException(string.Format("找不到名為 \'{0}\' 的端點。", endpointConfiguration));
        }
        
        public enum EndpointConfiguration
        {
            
            CRMServiceSoap,
            
            CRMServiceSoap12,
        }
    }
}
